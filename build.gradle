buildscript
{
    repositories
	{
        jcenter()
        maven
		{ 
			url = "http://files.minecraftforge.net/maven"
		}
    }
    dependencies 
	{
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "${mc_version}-${mod_version}"
group = "com.themastergeneral.ctdtweaks" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "CTD-Tweaks"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava 
{
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft
{
    version = "${forge_version}"
    runDir = "run"
    mappings = "snapshot_20170624"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories 
{
	maven 
	{
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "http://dvs1.progwml6.com/files/maven"
	}
	maven 
	{
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "modmaven.k-4u.nl"
	}
}

dependencies 
{
	// compile against the JEI API
	deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}:api"
	// at runtime, use the full JEI jar
	runtime "mezz.jei:jei_${mc_version}:${jei_version}"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
	
    from(sourceSets.main.resources.srcDirs) 
	{
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) 
	{
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {

    // Skips if the keyStore property is missing.
    onlyIf {
        project.hasProperty('keyStore')
    }

    // findProperty allows us to reference the property without it existing. 
    // Using project.propName would cause the script to fail validation if 
    // the property did not exist. 
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

// Runs this task automatically when build is ran. 
build.dependsOn signJar
